@model ChangePasswordVM
@inject UserManager<User> UserManager
@{
    User? user = UserManager.GetUserAsync(User).Result;
}

<div class="container mt-2">
    <h2>Change Password for @user!.FullName</h2>

    <div asp-validation-summary="ModelOnly"></div>

    <form asp-action="ChangePassword" asp-controller="Account" method="post">
        <div class="row mb-3">
            @Html.LabelFor(m => m.Email, new { @class = "col-form-label col-md-2", @for = "username" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @id = "username", @readonly = "true" })
            </div>
            <div class="col-md-4">
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            @Html.LabelFor(m => m.OldPassword, new { @class = "col-form-label col-md-2", @for = "oldpass" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.OldPassword, new { @class = "form-control", @id = "oldpass", @type = "password" })
            </div>
            <div class="col-md-4">
                @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            @Html.LabelFor(m => m.NewPassword, new { @class = "col-form-label col-md-2", @for = "newpass" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.NewPassword, new { @class = "form-control", @id = "newpass", @type = "password" })
            </div>
            <div class="col-md-4">
                @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-form-label col-md-2", @for = "confirmpass" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", @id = "confirmpass", @type = "password" })
            </div>
            <div class="col-md-4">
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="d-flex">
            <button class="btn btn-primary me-3">Change Password</button>
            <a asp-controller="Account" asp-action="Manager" class="btn btn-secondary">Cancel</a>
        </div>
    </form>
</div>
